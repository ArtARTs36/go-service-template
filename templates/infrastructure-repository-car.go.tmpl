package repository

import (
	"context"
	"database/sql"
	"errors"

	"github.com/jmoiron/sqlx"

	"{{ vars.global.go_module_path }}/internal/domain"
)

type PGCarRepository struct {
	db *sqlx.DB
}

func NewPGCarRepository(db *sqlx.DB) domain.CarRepository {
	return &PGCarRepository{
		db: db,
	}
}

func (r *PGCarRepository) Find(ctx context.Context, id int64) (*domain.Car, error) {
	var car domain.Car

	err := r.db.GetContext(ctx, &car, "SELECT * FROM cars WHERE id=$1", id)
	if err != nil {
		if errors.Is(err, sql.ErrNoRows) {
			return nil, ErrNotFound
		}

		return nil, err
	}

	return &car, nil
}
